{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "dbeb1d7a-1935-4458-a397-e0df785e0c24",
      "metadata": {
        "id": "dbeb1d7a-1935-4458-a397-e0df785e0c24"
      },
      "source": [
        "# Computing distances\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "c5b8f705-7140-44f2-b9c1-cb4e7c69985b",
      "metadata": {
        "id": "c5b8f705-7140-44f2-b9c1-cb4e7c69985b"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "id": "35b7052e-70d2-43d2-bc33-2662615c2a92",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "35b7052e-70d2-43d2-bc33-2662615c2a92",
        "outputId": "c58561d7-69bc-48ba-a6db-34f0dd7d9e6a"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>broccoli</th>\n",
              "      <th>brussels_sprouts</th>\n",
              "      <th>hamburger (meat)</th>\n",
              "      <th>oysters (raw)</th>\n",
              "      <th>onion (raw)</th>\n",
              "      <th>peas</th>\n",
              "      <th>olives</th>\n",
              "      <th>blue_cheese</th>\n",
              "      <th>whisky</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n",
              "student                                                                    \n",
              "Agustín             6                 6                 9              8   \n",
              "Anna                7                 5                 8             10   \n",
              "Christopher         9                 5                10             10   \n",
              "Fabian              9                 5                 9              7   \n",
              "Hülya              10                10                 8              3   \n",
              "Joldon              6                 6                 9              9   \n",
              "Karolina            9                 2                10              0   \n",
              "Lisardo             8                 9                 2              6   \n",
              "Nessa               9                 9                 6              3   \n",
              "Patrick             7                 8                10              5   \n",
              "Simge              10                 5                 7             10   \n",
              "Sri Saleela        10                 6                 0              0   \n",
              "Joan                4                 0                10              2   \n",
              "\n",
              "              onion (raw)  peas  olives  blue_cheese  whisky  \n",
              "student                                                       \n",
              "Agustín                 9     6      10            8       7  \n",
              "Anna                    5     5       7            9       1  \n",
              "Christopher             5     8       8            8       8  \n",
              "Fabian                  3     5       8            3       4  \n",
              "Hülya                   8     5      10           10       0  \n",
              "Joldon                  4     5      10            7       8  \n",
              "Karolina                7     5       8            8       1  \n",
              "Lisardo                 6     7      10            1       9  \n",
              "Nessa                   1     8       3            5       5  \n",
              "Patrick                10     5      10            0       3  \n",
              "Simge                  10     8      10           10       6  \n",
              "Sri Saleela             7     9       8            7       0  \n",
              "Joan                    5     0       8            9       8  "
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "sheet_id = '13n9SfqHIyzPHXzdPK0zqRE3gGfwkwe2vb9_ZjYYRpr8'\n",
        "sheet_name = 'DS015'\n",
        "url =  f'https://docs.google.com/spreadsheets/d/{sheet_id}/gviz/tq?tqx=out:csv&sheet={sheet_name}'\n",
        "\n",
        "df = pd.read_csv(url, index_col='student', nrows=13)\n",
        "df.drop(['age','favorite_color'], axis=1, inplace=True)\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "id": "U-qE-qvOpGfQ",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U-qE-qvOpGfQ",
        "outputId": "1623fabf-a697-45c4-f630-05b2c7454e9d"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "student\n",
              "Joan            4\n",
              "Agustín         6\n",
              "Joldon          6\n",
              "Anna            7\n",
              "Patrick         7\n",
              "Lisardo         8\n",
              "Christopher     9\n",
              "Fabian          9\n",
              "Karolina        9\n",
              "Nessa           9\n",
              "Hülya          10\n",
              "Simge          10\n",
              "Sri Saleela    10\n",
              "Name: broccoli, dtype: int64"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.broccoli.sort_values()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9Mg2EoqYn1ty",
      "metadata": {
        "id": "9Mg2EoqYn1ty"
      },
      "source": [
        "### Using scikitLearn `pairwise_distances`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "id": "cuJiO8-Zn0iK",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "cuJiO8-Zn0iK",
        "outputId": "5dc6bb02-26b9-4541-c072-a229e91a1034"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>student</th>\n",
              "      <th>Agustín</th>\n",
              "      <th>Anna</th>\n",
              "      <th>Christopher</th>\n",
              "      <th>Fabian</th>\n",
              "      <th>Hülya</th>\n",
              "      <th>Joldon</th>\n",
              "      <th>Karolina</th>\n",
              "      <th>Lisardo</th>\n",
              "      <th>Nessa</th>\n",
              "      <th>Patrick</th>\n",
              "      <th>Simge</th>\n",
              "      <th>Sri Saleela</th>\n",
              "      <th>Joan</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>8.366600</td>\n",
              "      <td>6.324555</td>\n",
              "      <td>9.273618</td>\n",
              "      <td>10.630146</td>\n",
              "      <td>5.385165</td>\n",
              "      <td>11.618950</td>\n",
              "      <td>11.357817</td>\n",
              "      <td>13.490738</td>\n",
              "      <td>9.848858</td>\n",
              "      <td>5.916080</td>\n",
              "      <td>15.099669</td>\n",
              "      <td>11.618950</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>8.366600</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8.246211</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>10.148892</td>\n",
              "      <td>8.185353</td>\n",
              "      <td>11.090537</td>\n",
              "      <td>14.525839</td>\n",
              "      <td>12.083046</td>\n",
              "      <td>12.529964</td>\n",
              "      <td>8.888194</td>\n",
              "      <td>14.142136</td>\n",
              "      <td>13.304135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>6.324555</td>\n",
              "      <td>8.246211</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>5.196152</td>\n",
              "      <td>13.076697</td>\n",
              "      <td>12.369317</td>\n",
              "      <td>11.832160</td>\n",
              "      <td>12.845233</td>\n",
              "      <td>6.855655</td>\n",
              "      <td>16.492423</td>\n",
              "      <td>13.379088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>9.273618</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.704700</td>\n",
              "      <td>7.141428</td>\n",
              "      <td>10.440307</td>\n",
              "      <td>10.630146</td>\n",
              "      <td>9.165151</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>11.357817</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>12.529964</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>10.630146</td>\n",
              "      <td>10.148892</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>11.704700</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>12.569805</td>\n",
              "      <td>9.380832</td>\n",
              "      <td>14.832397</td>\n",
              "      <td>12.767145</td>\n",
              "      <td>11.575837</td>\n",
              "      <td>11.135529</td>\n",
              "      <td>10.908712</td>\n",
              "      <td>15.620499</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>5.385165</td>\n",
              "      <td>8.185353</td>\n",
              "      <td>5.196152</td>\n",
              "      <td>7.141428</td>\n",
              "      <td>12.569805</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>13.038405</td>\n",
              "      <td>10.770330</td>\n",
              "      <td>11.958261</td>\n",
              "      <td>11.489125</td>\n",
              "      <td>8.944272</td>\n",
              "      <td>16.462078</td>\n",
              "      <td>11.135529</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>11.618950</td>\n",
              "      <td>11.090537</td>\n",
              "      <td>13.076697</td>\n",
              "      <td>10.440307</td>\n",
              "      <td>9.380832</td>\n",
              "      <td>13.038405</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>16.492423</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>12.083046</td>\n",
              "      <td>13.038405</td>\n",
              "      <td>11.618950</td>\n",
              "      <td>10.583005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>11.357817</td>\n",
              "      <td>14.525839</td>\n",
              "      <td>12.369317</td>\n",
              "      <td>10.630146</td>\n",
              "      <td>14.832397</td>\n",
              "      <td>10.770330</td>\n",
              "      <td>16.492423</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.532563</td>\n",
              "      <td>11.135529</td>\n",
              "      <td>12.961481</td>\n",
              "      <td>13.379088</td>\n",
              "      <td>17.204651</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>13.490738</td>\n",
              "      <td>12.083046</td>\n",
              "      <td>11.832160</td>\n",
              "      <td>9.165151</td>\n",
              "      <td>12.767145</td>\n",
              "      <td>11.958261</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>11.532563</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>13.892444</td>\n",
              "      <td>14.933185</td>\n",
              "      <td>12.083046</td>\n",
              "      <td>15.905974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>9.848858</td>\n",
              "      <td>12.529964</td>\n",
              "      <td>12.845233</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>11.575837</td>\n",
              "      <td>11.489125</td>\n",
              "      <td>12.083046</td>\n",
              "      <td>11.135529</td>\n",
              "      <td>13.892444</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>13.038405</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>15.556349</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>5.916080</td>\n",
              "      <td>8.888194</td>\n",
              "      <td>6.855655</td>\n",
              "      <td>11.357817</td>\n",
              "      <td>11.135529</td>\n",
              "      <td>8.944272</td>\n",
              "      <td>13.038405</td>\n",
              "      <td>12.961481</td>\n",
              "      <td>14.933185</td>\n",
              "      <td>13.038405</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>14.456832</td>\n",
              "      <td>15.231546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>15.099669</td>\n",
              "      <td>14.142136</td>\n",
              "      <td>16.492423</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>10.908712</td>\n",
              "      <td>16.462078</td>\n",
              "      <td>11.618950</td>\n",
              "      <td>13.379088</td>\n",
              "      <td>12.083046</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>14.456832</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>18.138357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>11.618950</td>\n",
              "      <td>13.304135</td>\n",
              "      <td>13.379088</td>\n",
              "      <td>12.529964</td>\n",
              "      <td>15.620499</td>\n",
              "      <td>11.135529</td>\n",
              "      <td>10.583005</td>\n",
              "      <td>17.204651</td>\n",
              "      <td>15.905974</td>\n",
              "      <td>15.556349</td>\n",
              "      <td>15.231546</td>\n",
              "      <td>18.138357</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "student        Agustín       Anna  Christopher     Fabian      Hülya  \\\n",
              "student                                                                \n",
              "Agustín       0.000000   8.366600     6.324555   9.273618  10.630146   \n",
              "Anna          8.366600   0.000000     8.246211   8.000000  10.148892   \n",
              "Christopher   6.324555   8.246211     0.000000   8.000000  13.000000   \n",
              "Fabian        9.273618   8.000000     8.000000   0.000000  11.704700   \n",
              "Hülya        10.630146  10.148892    13.000000  11.704700   0.000000   \n",
              "Joldon        5.385165   8.185353     5.196152   7.141428  12.569805   \n",
              "Karolina     11.618950  11.090537    13.076697  10.440307   9.380832   \n",
              "Lisardo      11.357817  14.525839    12.369317  10.630146  14.832397   \n",
              "Nessa        13.490738  12.083046    11.832160   9.165151  12.767145   \n",
              "Patrick       9.848858  12.529964    12.845233   9.000000  11.575837   \n",
              "Simge         5.916080   8.888194     6.855655  11.357817  11.135529   \n",
              "Sri Saleela  15.099669  14.142136    16.492423  14.000000  10.908712   \n",
              "Joan         11.618950  13.304135    13.379088  12.529964  15.620499   \n",
              "\n",
              "student         Joldon   Karolina    Lisardo      Nessa    Patrick      Simge  \\\n",
              "student                                                                         \n",
              "Agustín       5.385165  11.618950  11.357817  13.490738   9.848858   5.916080   \n",
              "Anna          8.185353  11.090537  14.525839  12.083046  12.529964   8.888194   \n",
              "Christopher   5.196152  13.076697  12.369317  11.832160  12.845233   6.855655   \n",
              "Fabian        7.141428  10.440307  10.630146   9.165151   9.000000  11.357817   \n",
              "Hülya        12.569805   9.380832  14.832397  12.767145  11.575837  11.135529   \n",
              "Joldon        0.000000  13.038405  10.770330  11.958261  11.489125   8.944272   \n",
              "Karolina     13.038405   0.000000  16.492423  13.000000  12.083046  13.038405   \n",
              "Lisardo      10.770330  16.492423   0.000000  11.532563  11.135529  12.961481   \n",
              "Nessa        11.958261  13.000000  11.532563   0.000000  13.892444  14.933185   \n",
              "Patrick      11.489125  12.083046  11.135529  13.892444   0.000000  13.038405   \n",
              "Simge         8.944272  13.038405  12.961481  14.933185  13.038405   0.000000   \n",
              "Sri Saleela  16.462078  11.618950  13.379088  12.083046  15.000000  14.456832   \n",
              "Joan         11.135529  10.583005  17.204651  15.905974  15.556349  15.231546   \n",
              "\n",
              "student      Sri Saleela       Joan  \n",
              "student                              \n",
              "Agustín        15.099669  11.618950  \n",
              "Anna           14.142136  13.304135  \n",
              "Christopher    16.492423  13.379088  \n",
              "Fabian         14.000000  12.529964  \n",
              "Hülya          10.908712  15.620499  \n",
              "Joldon         16.462078  11.135529  \n",
              "Karolina       11.618950  10.583005  \n",
              "Lisardo        13.379088  17.204651  \n",
              "Nessa          12.083046  15.905974  \n",
              "Patrick        15.000000  15.556349  \n",
              "Simge          14.456832  15.231546  \n",
              "Sri Saleela     0.000000  18.138357  \n",
              "Joan           18.138357   0.000000  "
            ]
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "from sklearn.metrics import pairwise_distances\n",
        "\n",
        "# Euclidean (by default)\n",
        "eucl = pd.DataFrame(pairwise_distances(df), \n",
        "                    index=df.index, \n",
        "                    columns=df.index)\n",
        "eucl"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ALe5-cN2xwPa",
      "metadata": {
        "id": "ALe5-cN2xwPa"
      },
      "source": [
        "**Challenge:** Explore the documentation of scikit-learn's pairwise distances function and create a dataframe like the one above, but using Manhattan distances.\n",
        "\n",
        "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise_distances.html"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "id": "CMMzfSFmxH6X",
      "metadata": {
        "id": "CMMzfSFmxH6X"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>student</th>\n",
              "      <th>Agustín</th>\n",
              "      <th>Anna</th>\n",
              "      <th>Christopher</th>\n",
              "      <th>Fabian</th>\n",
              "      <th>Hülya</th>\n",
              "      <th>Joldon</th>\n",
              "      <th>Karolina</th>\n",
              "      <th>Lisardo</th>\n",
              "      <th>Nessa</th>\n",
              "      <th>Patrick</th>\n",
              "      <th>Simge</th>\n",
              "      <th>Sri Saleela</th>\n",
              "      <th>Joan</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>0.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>36.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>36.0</td>\n",
              "      <td>29.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>20.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>31.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>16.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>27.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>22.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>33.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>25.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>38.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>9.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>39.0</td>\n",
              "      <td>26.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>27.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>42.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>28.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>24.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>27.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>42.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>44.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>36.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>43.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>21.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>28.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>39.0</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>15.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>36.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>39.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>39.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>45.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>29.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>38.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>45.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "student      Agustín  Anna  Christopher  Fabian  Hülya  Joldon  Karolina  \\\n",
              "student                                                                    \n",
              "Agustín          0.0  20.0         16.0    22.0   25.0     9.0      27.0   \n",
              "Anna            20.0   0.0         16.0    18.0   23.0    17.0      21.0   \n",
              "Christopher     16.0  16.0          0.0    18.0   33.0    13.0      25.0   \n",
              "Fabian          22.0  18.0         18.0     0.0   29.0    17.0      23.0   \n",
              "Hülya           25.0  23.0         33.0    29.0    0.0    30.0      20.0   \n",
              "Joldon           9.0  17.0         13.0    17.0   30.0     0.0      30.0   \n",
              "Karolina        27.0  21.0         25.0    23.0   20.0    30.0       0.0   \n",
              "Lisardo         27.0  37.0         29.0    27.0   34.0    26.0      42.0   \n",
              "Nessa           36.0  34.0         30.0    24.0   31.0    33.0      35.0   \n",
              "Patrick         21.0  29.0         33.0    21.0   24.0    26.0      28.0   \n",
              "Simge           15.0  21.0         15.0    27.0   24.0    22.0      32.0   \n",
              "Sri Saleela     36.0  32.0         34.0    34.0   25.0    39.0      21.0   \n",
              "Joan            29.0  31.0         27.0    33.0   38.0    26.0      24.0   \n",
              "\n",
              "student      Lisardo  Nessa  Patrick  Simge  Sri Saleela  Joan  \n",
              "student                                                         \n",
              "Agustín         27.0   36.0     21.0   15.0         36.0  29.0  \n",
              "Anna            37.0   34.0     29.0   21.0         32.0  31.0  \n",
              "Christopher     29.0   30.0     33.0   15.0         34.0  27.0  \n",
              "Fabian          27.0   24.0     21.0   27.0         34.0  33.0  \n",
              "Hülya           34.0   31.0     24.0   24.0         25.0  38.0  \n",
              "Joldon          26.0   33.0     26.0   22.0         39.0  26.0  \n",
              "Karolina        42.0   35.0     28.0   32.0         21.0  24.0  \n",
              "Lisardo          0.0   29.0     24.0   32.0         33.0  44.0  \n",
              "Nessa           29.0    0.0     35.0   35.0         32.0  43.0  \n",
              "Patrick         24.0   35.0      0.0   30.0         39.0  40.0  \n",
              "Simge           32.0   35.0     30.0    0.0         33.0  40.0  \n",
              "Sri Saleela     33.0   32.0     39.0   33.0          0.0  45.0  \n",
              "Joan            44.0   43.0     40.0   40.0         45.0   0.0  "
            ]
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "from sklearn.metrics import pairwise_distances\n",
        "manh = pd.DataFrame(pairwise_distances(df, metric=\"manhattan\"), index=df.index, columns=df.index)\n",
        "manh\n",
        "# Евклидово расстояние (Euclidean distance) между двумя точками в n-мерном пространстве определяется как \n",
        "# корень из суммы квадратов разностей координат этих точек.\n",
        "# d(x, y) = sqrt((x1 - y1)^2 + (x2 - y2)^2 + ... + (xn - yn)^2)\n",
        "# Здесь x и y - это две точки в n-мерном пространстве, а x1, x2,..., xn и y1, y2,..., yn - их координаты.\n",
        "\n",
        "# С другой стороны, Манхэттенское расстояние (Manhattan distance) между двумя точками в n-мерном пространстве определяется как\n",
        "#  сумма абсолютных разностей координат этих точек. \n",
        "# d(x, y) = |x1 - y1| + |x2 - y2| + ... + |xn - yn|\n",
        "\n",
        "# В отличие от евклидова расстояния, Манхэттенское расстояние не учитывает квадратичные различия между координатами, \n",
        "# а просто суммирует абсолютные различия. Поэтому оно часто используется в случаях, \n",
        "# когда необходимо учитывать только пространственные различия, но не учитывать их масштабирование или ориентацию."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "Ju79y7NxxePN",
      "metadata": {
        "id": "Ju79y7NxxePN"
      },
      "source": [
        "We can visualize the distances with a heatmap:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "id": "9863a077-e816-4ed6-824d-bdd9179b154c",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 763
        },
        "id": "9863a077-e816-4ed6-824d-bdd9179b154c",
        "outputId": "ce9189c8-90d8-4674-ea58-d432c1c84a63"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 700x400 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "from sklearn.metrics import pairwise_distances\n",
        "\n",
        "# Euclidean (by default)\n",
        "eucl = pd.DataFrame(pairwise_distances(df), \n",
        "                    index=df.index, \n",
        "                    columns=df.index)\n",
        "eucl\n",
        "import seaborn as sns\n",
        "plt.subplots(figsize=(7, 4))\n",
        "sns.heatmap(eucl);"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "22684a50-3c0e-4f2d-8775-d5eccb476be0",
      "metadata": {
        "id": "22684a50-3c0e-4f2d-8775-d5eccb476be0"
      },
      "source": [
        "### Data scaling\n",
        "\n",
        "The variable \"age\" is at a larger scale compared to the food ratings. That gives it a larger weight when computing similarities between students.\n",
        "\n",
        "We'll scale the data manually first, so that we understand the transformation, and later on we'll us Scikit-Learn."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "858df324-ef62-4ba1-a9cf-ef186c3420ef",
      "metadata": {
        "id": "858df324-ef62-4ba1-a9cf-ef186c3420ef"
      },
      "source": [
        "Working with variables with the same range: "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "id": "4cd6c65b-3a43-4541-a8df-2317172448e8",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "4cd6c65b-3a43-4541-a8df-2317172448e8",
        "outputId": "307ee30c-aee5-48c5-fb67-4122bc9ab8fc"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>broccoli</th>\n",
              "      <th>brussels_sprouts</th>\n",
              "      <th>hamburger (meat)</th>\n",
              "      <th>oysters (raw)</th>\n",
              "      <th>onion (raw)</th>\n",
              "      <th>peas</th>\n",
              "      <th>olives</th>\n",
              "      <th>blue_cheese</th>\n",
              "      <th>whisky</th>\n",
              "      <th>age</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "      <td>29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n",
              "student                                                                    \n",
              "Agustín             6                 6                 9              8   \n",
              "Anna                7                 5                 8             10   \n",
              "Christopher         9                 5                10             10   \n",
              "Fabian              9                 5                 9              7   \n",
              "Hülya              10                10                 8              3   \n",
              "Joldon              6                 6                 9              9   \n",
              "Karolina            9                 2                10              0   \n",
              "Lisardo             8                 9                 2              6   \n",
              "Nessa               9                 9                 6              3   \n",
              "Patrick             7                 8                10              5   \n",
              "Simge              10                 5                 7             10   \n",
              "Sri Saleela        10                 6                 0              0   \n",
              "Joan                4                 0                10              2   \n",
              "\n",
              "              onion (raw)  peas  olives  blue_cheese  whisky  age  \n",
              "student                                                            \n",
              "Agustín                 9     6      10            8       7   33  \n",
              "Anna                    5     5       7            9       1   35  \n",
              "Christopher             5     8       8            8       8   37  \n",
              "Fabian                  3     5       8            3       4   42  \n",
              "Hülya                   8     5      10           10       0   32  \n",
              "Joldon                  4     5      10            7       8    8  \n",
              "Karolina                7     5       8            8       1   32  \n",
              "Lisardo                 6     7      10            1       9   25  \n",
              "Nessa                   1     8       3            5       5   36  \n",
              "Patrick                10     5      10            0       3   24  \n",
              "Simge                  10     8      10           10       6   29  \n",
              "Sri Saleela             7     9       8            7       0   34  \n",
              "Joan                    5     0       8            9       8   88  "
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df = pd.read_csv(url, index_col='student', nrows=13)\n",
        "df.drop('favorite_color', axis=1, inplace=True)\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "id": "5Csfr9AixCXx",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 763
        },
        "id": "5Csfr9AixCXx",
        "outputId": "b4cfe552-22b7-4f08-9415-edaa07d635fa"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1200x800 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Euclidean (by default)\n",
        "eucl = pd.DataFrame(pairwise_distances(df), \n",
        "                    index=df.index, \n",
        "                    columns=df.index)\n",
        "\n",
        "import seaborn as sns\n",
        "plt.subplots(figsize=(12, 8))\n",
        "sns.heatmap(eucl);"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "338c0a2e-bb18-45a5-9746-f873574aced9",
      "metadata": {
        "id": "338c0a2e-bb18-45a5-9746-f873574aced9"
      },
      "source": [
        "#### Min and Max Scaling"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "5c8351cf-3ec4-4711-8eee-a587ccb97b86",
      "metadata": {
        "id": "5c8351cf-3ec4-4711-8eee-a587ccb97b86"
      },
      "source": [
        "In that case we will use a normalization of minimum and maximum: \n",
        "\n",
        "$$\n",
        "x' = \\frac{x - min(x)}{max(x) - min(x)}\n",
        "$$\n",
        "\n",
        "If we want to normalize the column broccoli, I will take the maximum and minimum value of that column, and then I will look at each individual value to know how for it is for this two values. "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "id": "f48a84d6-2c41-4994-bec3-0b39e55b4139",
      "metadata": {
        "id": "f48a84d6-2c41-4994-bec3-0b39e55b4139"
      },
      "outputs": [],
      "source": [
        "# x_scaled = (x - x_min) / (x_max - x_min)\n",
        "def min_max_scaling(col): \n",
        "    min_col = min(col)\n",
        "    max_col = max(col)\n",
        "    norm_val = []    \n",
        "    for val in col: \n",
        "        norm_val.append((val - min_col) / (max_col - min_col))\n",
        "    return norm_val"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "c80ae2a8-dd38-4e98-a1df-543d3b66ebe9",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "c80ae2a8-dd38-4e98-a1df-543d3b66ebe9",
        "outputId": "16fcd142-4b42-4a56-b742-800f2845cfad"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>original</th>\n",
              "      <th>min_max_scaling</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>6</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>7</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>9</td>\n",
              "      <td>0.833333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>9</td>\n",
              "      <td>0.833333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>10</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>6</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>9</td>\n",
              "      <td>0.833333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>8</td>\n",
              "      <td>0.666667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>9</td>\n",
              "      <td>0.833333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>7</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>10</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>10</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>4</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             original  min_max_scaling\n",
              "student                               \n",
              "Agustín             6         0.333333\n",
              "Anna                7         0.500000\n",
              "Christopher         9         0.833333\n",
              "Fabian              9         0.833333\n",
              "Hülya              10         1.000000\n",
              "Joldon              6         0.333333\n",
              "Karolina            9         0.833333\n",
              "Lisardo             8         0.666667\n",
              "Nessa               9         0.833333\n",
              "Patrick             7         0.500000\n",
              "Simge              10         1.000000\n",
              "Sri Saleela        10         1.000000\n",
              "Joan                4         0.000000"
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pd.DataFrame({\n",
        "    'original': df.iloc[:,0], \n",
        "    'min_max_scaling': min_max_scaling(df.iloc[:,0])\n",
        "})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "id": "63cee0c6-b4d9-44aa-92da-d36ae6667bf0",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "63cee0c6-b4d9-44aa-92da-d36ae6667bf0",
        "outputId": "85b0579a-cec2-4f92-a742-5de6b2214e3b"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>broccoli</th>\n",
              "      <th>brussels_sprouts</th>\n",
              "      <th>hamburger (meat)</th>\n",
              "      <th>oysters (raw)</th>\n",
              "      <th>onion (raw)</th>\n",
              "      <th>peas</th>\n",
              "      <th>olives</th>\n",
              "      <th>blue_cheese</th>\n",
              "      <th>whisky</th>\n",
              "      <th>age</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>0.3125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>0.3375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.3625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.222222</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.4250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.3000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>0.3000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.2125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.3500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.2000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.2625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.3250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n",
              "student                                                                    \n",
              "Agustín      0.333333               0.6               0.9            0.8   \n",
              "Anna         0.500000               0.5               0.8            1.0   \n",
              "Christopher  0.833333               0.5               1.0            1.0   \n",
              "Fabian       0.833333               0.5               0.9            0.7   \n",
              "Hülya        1.000000               1.0               0.8            0.3   \n",
              "Joldon       0.333333               0.6               0.9            0.9   \n",
              "Karolina     0.833333               0.2               1.0            0.0   \n",
              "Lisardo      0.666667               0.9               0.2            0.6   \n",
              "Nessa        0.833333               0.9               0.6            0.3   \n",
              "Patrick      0.500000               0.8               1.0            0.5   \n",
              "Simge        1.000000               0.5               0.7            1.0   \n",
              "Sri Saleela  1.000000               0.6               0.0            0.0   \n",
              "Joan         0.000000               0.0               1.0            0.2   \n",
              "\n",
              "              onion (raw)      peas    olives  blue_cheese    whisky     age  \n",
              "student                                                                       \n",
              "Agustín          0.888889  0.666667  1.000000          0.8  0.777778  0.3125  \n",
              "Anna             0.444444  0.555556  0.571429          0.9  0.111111  0.3375  \n",
              "Christopher      0.444444  0.888889  0.714286          0.8  0.888889  0.3625  \n",
              "Fabian           0.222222  0.555556  0.714286          0.3  0.444444  0.4250  \n",
              "Hülya            0.777778  0.555556  1.000000          1.0  0.000000  0.3000  \n",
              "Joldon           0.333333  0.555556  1.000000          0.7  0.888889  0.0000  \n",
              "Karolina         0.666667  0.555556  0.714286          0.8  0.111111  0.3000  \n",
              "Lisardo          0.555556  0.777778  1.000000          0.1  1.000000  0.2125  \n",
              "Nessa            0.000000  0.888889  0.000000          0.5  0.555556  0.3500  \n",
              "Patrick          1.000000  0.555556  1.000000          0.0  0.333333  0.2000  \n",
              "Simge            1.000000  0.888889  1.000000          1.0  0.666667  0.2625  \n",
              "Sri Saleela      0.666667  1.000000  0.714286          0.7  0.000000  0.3250  \n",
              "Joan             0.444444  0.000000  0.714286          0.9  0.888889  1.0000  "
            ]
          },
          "execution_count": 12,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# normalise all the columns on a dataset\n",
        "df_norm = df.apply(min_max_scaling, axis=0).copy()\n",
        "df_norm"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "zKAR7OQMyyxB",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 763
        },
        "id": "zKAR7OQMyyxB",
        "outputId": "1d4d0e4d-f593-4695-9d6d-31788f254578"
      },
      "outputs": [
        {
          "data": {
            "image/png": "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",
            "text/plain": [
              "<Figure size 700x400 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Euclidean (by default)\n",
        "eucl = pd.DataFrame(pairwise_distances(df_norm), \n",
        "                    index=df_norm.index, \n",
        "                    columns=df_norm.index)\n",
        "\n",
        "import seaborn as sns\n",
        "plt.subplots(figsize=(7, 4))\n",
        "sns.heatmap(eucl);"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3557492a-59d1-4d22-b605-a41a1e1985bd",
      "metadata": {
        "id": "3557492a-59d1-4d22-b605-a41a1e1985bd"
      },
      "source": [
        "#### Range Scaling"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3f96d342-ed6f-45b7-80c2-86b2b366c62d",
      "metadata": {
        "id": "3f96d342-ed6f-45b7-80c2-86b2b366c62d"
      },
      "source": [
        "When we normalise the ratings, we are normalising the values between the minimum and maximum of each column, which should be 0 and 10. \n",
        "But, what happens when no one has given a rate of 0 or 10 to a food?\n",
        "\n",
        "With min/max scaling the minumum and maximum of a column determine the range of that column. This can sometimes lead to obscure results in data. For example, if the lowest score for broccolli was an 8 and the highest was a 9, when we min/max scale broccoli, the 8 will become a 0, and the 9 will become a 1. The 0 and 1 will lead us to believe that these scores were very different, when in reality they were quite similar. In cases where it is appropriate, we can determine the range of our scaling: we can choose 1-10, 1-100, or even 7-99 if we wish to."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "46bb08c1-ebe2-4d88-93fb-19c77568512a",
      "metadata": {
        "id": "46bb08c1-ebe2-4d88-93fb-19c77568512a"
      },
      "source": [
        "##### CHALLENGE: apply a range scaling on your data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "166da88b-6d50-41f6-9f9e-f5acc1bb5bd0",
      "metadata": {
        "id": "166da88b-6d50-41f6-9f9e-f5acc1bb5bd0"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/Users/Anna/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:84: FutureWarning: In a future version, DataFrame.min(axis=None) will return a scalar min over the entire DataFrame. To retain the old behavior, use 'frame.min(axis=0)' or just 'frame.min()'\n",
            "  return reduction(axis=axis, out=out, **passkwargs)\n",
            "/Users/Anna/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:84: FutureWarning: In a future version, DataFrame.max(axis=None) will return a scalar max over the entire DataFrame. To retain the old behavior, use 'frame.max(axis=0)' or just 'frame.max()'\n",
            "  return reduction(axis=axis, out=out, **passkwargs)\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>broccoli</th>\n",
              "      <th>brussels_sprouts</th>\n",
              "      <th>hamburger (meat)</th>\n",
              "      <th>oysters (raw)</th>\n",
              "      <th>onion (raw)</th>\n",
              "      <th>peas</th>\n",
              "      <th>olives</th>\n",
              "      <th>blue_cheese</th>\n",
              "      <th>whisky</th>\n",
              "      <th>age</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>0.3125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>0.3375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.3625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.222222</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.4250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.3000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>0.3000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.2125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.3500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.2000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.2625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.3250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n",
              "student                                                                    \n",
              "Agustín      0.333333               0.6               0.9            0.8   \n",
              "Anna         0.500000               0.5               0.8            1.0   \n",
              "Christopher  0.833333               0.5               1.0            1.0   \n",
              "Fabian       0.833333               0.5               0.9            0.7   \n",
              "Hülya        1.000000               1.0               0.8            0.3   \n",
              "Joldon       0.333333               0.6               0.9            0.9   \n",
              "Karolina     0.833333               0.2               1.0            0.0   \n",
              "Lisardo      0.666667               0.9               0.2            0.6   \n",
              "Nessa        0.833333               0.9               0.6            0.3   \n",
              "Patrick      0.500000               0.8               1.0            0.5   \n",
              "Simge        1.000000               0.5               0.7            1.0   \n",
              "Sri Saleela  1.000000               0.6               0.0            0.0   \n",
              "Joan         0.000000               0.0               1.0            0.2   \n",
              "\n",
              "              onion (raw)      peas    olives  blue_cheese    whisky     age  \n",
              "student                                                                       \n",
              "Agustín          0.888889  0.666667  1.000000          0.8  0.777778  0.3125  \n",
              "Anna             0.444444  0.555556  0.571429          0.9  0.111111  0.3375  \n",
              "Christopher      0.444444  0.888889  0.714286          0.8  0.888889  0.3625  \n",
              "Fabian           0.222222  0.555556  0.714286          0.3  0.444444  0.4250  \n",
              "Hülya            0.777778  0.555556  1.000000          1.0  0.000000  0.3000  \n",
              "Joldon           0.333333  0.555556  1.000000          0.7  0.888889  0.0000  \n",
              "Karolina         0.666667  0.555556  0.714286          0.8  0.111111  0.3000  \n",
              "Lisardo          0.555556  0.777778  1.000000          0.1  1.000000  0.2125  \n",
              "Nessa            0.000000  0.888889  0.000000          0.5  0.555556  0.3500  \n",
              "Patrick          1.000000  0.555556  1.000000          0.0  0.333333  0.2000  \n",
              "Simge            1.000000  0.888889  1.000000          1.0  0.666667  0.2625  \n",
              "Sri Saleela      0.666667  1.000000  0.714286          0.7  0.000000  0.3250  \n",
              "Joan             0.444444  0.000000  0.714286          0.9  0.888889  1.0000  "
            ]
          },
          "execution_count": 14,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import numpy as np\n",
        "# Создаем массив данных\n",
        "data = df\n",
        "# Находим минимальное и максимальное значения\n",
        "data_min = np.min(data)\n",
        "data_max = np.max(data)\n",
        "# Вычисляем диапазон\n",
        "data_range = data_max - data_min\n",
        "# Масштабируем данные\n",
        "scaled_data = (data - data_min) / data_range\n",
        "\n",
        "scaled_data\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "id": "90faa217",
      "metadata": {},
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/Users/Anna/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:84: FutureWarning: In a future version, DataFrame.min(axis=None) will return a scalar min over the entire DataFrame. To retain the old behavior, use 'frame.min(axis=0)' or just 'frame.min()'\n",
            "  return reduction(axis=axis, out=out, **passkwargs)\n",
            "/Users/Anna/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:84: FutureWarning: In a future version, DataFrame.max(axis=None) will return a scalar max over the entire DataFrame. To retain the old behavior, use 'frame.max(axis=0)' or just 'frame.max()'\n",
            "  return reduction(axis=axis, out=out, **passkwargs)\n",
            "/Users/Anna/opt/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3438: FutureWarning: In a future version, DataFrame.mean(axis=None) will return a scalar mean over the entire DataFrame. To retain the old behavior, use 'frame.mean(axis=0)' or just 'frame.mean()'\n",
            "  return mean(axis=axis, dtype=dtype, out=out, **kwargs)\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>broccoli</th>\n",
              "      <th>brussels_sprouts</th>\n",
              "      <th>hamburger (meat)</th>\n",
              "      <th>oysters (raw)</th>\n",
              "      <th>onion (raw)</th>\n",
              "      <th>peas</th>\n",
              "      <th>olives</th>\n",
              "      <th>blue_cheese</th>\n",
              "      <th>whisky</th>\n",
              "      <th>age</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>-1.333333</td>\n",
              "      <td>0.061538</td>\n",
              "      <td>0.584615</td>\n",
              "      <td>0.953846</td>\n",
              "      <td>1.264957</td>\n",
              "      <td>0.068376</td>\n",
              "      <td>0.879121</td>\n",
              "      <td>0.584615</td>\n",
              "      <td>1.059829</td>\n",
              "      <td>-0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>-0.666667</td>\n",
              "      <td>-0.338462</td>\n",
              "      <td>0.184615</td>\n",
              "      <td>1.753846</td>\n",
              "      <td>-0.512821</td>\n",
              "      <td>-0.376068</td>\n",
              "      <td>-0.835165</td>\n",
              "      <td>0.984615</td>\n",
              "      <td>-1.606838</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>-0.338462</td>\n",
              "      <td>0.984615</td>\n",
              "      <td>1.753846</td>\n",
              "      <td>-0.512821</td>\n",
              "      <td>0.957265</td>\n",
              "      <td>-0.263736</td>\n",
              "      <td>0.584615</td>\n",
              "      <td>1.504274</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>-0.338462</td>\n",
              "      <td>0.584615</td>\n",
              "      <td>0.553846</td>\n",
              "      <td>-1.401709</td>\n",
              "      <td>-0.376068</td>\n",
              "      <td>-0.263736</td>\n",
              "      <td>-1.415385</td>\n",
              "      <td>-0.273504</td>\n",
              "      <td>0.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>1.333333</td>\n",
              "      <td>1.661538</td>\n",
              "      <td>0.184615</td>\n",
              "      <td>-1.046154</td>\n",
              "      <td>0.820513</td>\n",
              "      <td>-0.376068</td>\n",
              "      <td>0.879121</td>\n",
              "      <td>1.384615</td>\n",
              "      <td>-2.051282</td>\n",
              "      <td>-0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>-1.333333</td>\n",
              "      <td>0.061538</td>\n",
              "      <td>0.584615</td>\n",
              "      <td>1.353846</td>\n",
              "      <td>-0.957265</td>\n",
              "      <td>-0.376068</td>\n",
              "      <td>0.879121</td>\n",
              "      <td>0.184615</td>\n",
              "      <td>1.504274</td>\n",
              "      <td>-1.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>-1.538462</td>\n",
              "      <td>0.984615</td>\n",
              "      <td>-2.246154</td>\n",
              "      <td>0.376068</td>\n",
              "      <td>-0.376068</td>\n",
              "      <td>-0.263736</td>\n",
              "      <td>0.584615</td>\n",
              "      <td>-1.606838</td>\n",
              "      <td>-0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.261538</td>\n",
              "      <td>-2.215385</td>\n",
              "      <td>0.153846</td>\n",
              "      <td>-0.068376</td>\n",
              "      <td>0.512821</td>\n",
              "      <td>0.879121</td>\n",
              "      <td>-2.215385</td>\n",
              "      <td>1.948718</td>\n",
              "      <td>-0.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.261538</td>\n",
              "      <td>-0.615385</td>\n",
              "      <td>-1.046154</td>\n",
              "      <td>-2.290598</td>\n",
              "      <td>0.957265</td>\n",
              "      <td>-3.120879</td>\n",
              "      <td>-0.615385</td>\n",
              "      <td>0.170940</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>-0.666667</td>\n",
              "      <td>0.861538</td>\n",
              "      <td>0.984615</td>\n",
              "      <td>-0.246154</td>\n",
              "      <td>1.709402</td>\n",
              "      <td>-0.376068</td>\n",
              "      <td>0.879121</td>\n",
              "      <td>-2.615385</td>\n",
              "      <td>-0.717949</td>\n",
              "      <td>-0.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>1.333333</td>\n",
              "      <td>-0.338462</td>\n",
              "      <td>-0.215385</td>\n",
              "      <td>1.753846</td>\n",
              "      <td>1.709402</td>\n",
              "      <td>0.957265</td>\n",
              "      <td>0.879121</td>\n",
              "      <td>1.384615</td>\n",
              "      <td>0.615385</td>\n",
              "      <td>-0.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>1.333333</td>\n",
              "      <td>0.061538</td>\n",
              "      <td>-3.015385</td>\n",
              "      <td>-2.246154</td>\n",
              "      <td>0.376068</td>\n",
              "      <td>1.401709</td>\n",
              "      <td>-0.263736</td>\n",
              "      <td>0.184615</td>\n",
              "      <td>-2.051282</td>\n",
              "      <td>-0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>-2.666667</td>\n",
              "      <td>-2.338462</td>\n",
              "      <td>0.984615</td>\n",
              "      <td>-1.446154</td>\n",
              "      <td>-0.512821</td>\n",
              "      <td>-2.598291</td>\n",
              "      <td>-0.263736</td>\n",
              "      <td>0.984615</td>\n",
              "      <td>1.504274</td>\n",
              "      <td>2.65</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n",
              "student                                                                    \n",
              "Agustín     -1.333333          0.061538          0.584615       0.953846   \n",
              "Anna        -0.666667         -0.338462          0.184615       1.753846   \n",
              "Christopher  0.666667         -0.338462          0.984615       1.753846   \n",
              "Fabian       0.666667         -0.338462          0.584615       0.553846   \n",
              "Hülya        1.333333          1.661538          0.184615      -1.046154   \n",
              "Joldon      -1.333333          0.061538          0.584615       1.353846   \n",
              "Karolina     0.666667         -1.538462          0.984615      -2.246154   \n",
              "Lisardo      0.000000          1.261538         -2.215385       0.153846   \n",
              "Nessa        0.666667          1.261538         -0.615385      -1.046154   \n",
              "Patrick     -0.666667          0.861538          0.984615      -0.246154   \n",
              "Simge        1.333333         -0.338462         -0.215385       1.753846   \n",
              "Sri Saleela  1.333333          0.061538         -3.015385      -2.246154   \n",
              "Joan        -2.666667         -2.338462          0.984615      -1.446154   \n",
              "\n",
              "              onion (raw)      peas    olives  blue_cheese    whisky   age  \n",
              "student                                                                     \n",
              "Agustín          1.264957  0.068376  0.879121     0.584615  1.059829 -0.10  \n",
              "Anna            -0.512821 -0.376068 -0.835165     0.984615 -1.606838  0.00  \n",
              "Christopher     -0.512821  0.957265 -0.263736     0.584615  1.504274  0.10  \n",
              "Fabian          -1.401709 -0.376068 -0.263736    -1.415385 -0.273504  0.35  \n",
              "Hülya            0.820513 -0.376068  0.879121     1.384615 -2.051282 -0.15  \n",
              "Joldon          -0.957265 -0.376068  0.879121     0.184615  1.504274 -1.35  \n",
              "Karolina         0.376068 -0.376068 -0.263736     0.584615 -1.606838 -0.15  \n",
              "Lisardo         -0.068376  0.512821  0.879121    -2.215385  1.948718 -0.50  \n",
              "Nessa           -2.290598  0.957265 -3.120879    -0.615385  0.170940  0.05  \n",
              "Patrick          1.709402 -0.376068  0.879121    -2.615385 -0.717949 -0.55  \n",
              "Simge            1.709402  0.957265  0.879121     1.384615  0.615385 -0.30  \n",
              "Sri Saleela      0.376068  1.401709 -0.263736     0.184615 -2.051282 -0.05  \n",
              "Joan            -0.512821 -2.598291 -0.263736     0.984615  1.504274  2.65  "
            ]
          },
          "execution_count": 19,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Range Scaling \n",
        "#range_scaled = (data - data_mean) / (0.5 * (data_max - data_min))\n",
        "# Создаем массив данных\n",
        "data1 = df\n",
        "\n",
        "# Находим минимальное и максимальное значения\n",
        "data1_min = np.min(data1)\n",
        "data1_max = np.max(data1)\n",
        "\n",
        "# Вычисляем среднее значение и диапазон\n",
        "data1_mean = np.mean(data1)\n",
        "data1_range = data1_max - data1_min\n",
        "\n",
        "# Масштабируем данные\n",
        "range_width = 2 # задаем ширину диапазона\n",
        "scaled_data1 = (data1 - data1_mean) / (0.5 * data1_range) * range_width\n",
        "\n",
        "# Выводим результат\n",
        "scaled_data1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "id": "775ed5f5",
      "metadata": {},
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 700x400 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "eucl_s = pd.DataFrame(pairwise_distances(scaled_data), index=scaled_data.index, columns=scaled_data.index)\n",
        "\n",
        "plt.subplots(figsize=(7, 4))\n",
        "sns.heatmap(eucl_s);"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "735b1351-f8cf-4676-acff-eef9a62fe4a2",
      "metadata": {
        "id": "735b1351-f8cf-4676-acff-eef9a62fe4a2"
      },
      "source": [
        "### Scaling with scikit learn"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "id": "864f5954-e95b-491c-bad6-6d995f8d26a4",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 582
        },
        "id": "864f5954-e95b-491c-bad6-6d995f8d26a4",
        "outputId": "b3d3d1bc-8852-4d5f-d852-bf0d4d140af5"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>broccoli</th>\n",
              "      <th>brussels_sprouts</th>\n",
              "      <th>hamburger (meat)</th>\n",
              "      <th>oysters (raw)</th>\n",
              "      <th>onion (raw)</th>\n",
              "      <th>peas</th>\n",
              "      <th>olives</th>\n",
              "      <th>blue_cheese</th>\n",
              "      <th>whisky</th>\n",
              "      <th>age</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>student</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agustín</th>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>0.3125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anna</th>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>0.3375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Christopher</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.3625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fabian</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.222222</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.4250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hülya</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.3000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joldon</th>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Karolina</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.111111</td>\n",
              "      <td>0.3000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lisardo</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.777778</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.2125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nessa</th>\n",
              "      <td>0.833333</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>0.3500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Patrick</th>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.555556</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.2000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simge</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.2625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sri Saleela</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.3250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Joan</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.444444</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.888889</td>\n",
              "      <td>1.0000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n",
              "student                                                                    \n",
              "Agustín      0.333333               0.6               0.9            0.8   \n",
              "Anna         0.500000               0.5               0.8            1.0   \n",
              "Christopher  0.833333               0.5               1.0            1.0   \n",
              "Fabian       0.833333               0.5               0.9            0.7   \n",
              "Hülya        1.000000               1.0               0.8            0.3   \n",
              "Joldon       0.333333               0.6               0.9            0.9   \n",
              "Karolina     0.833333               0.2               1.0            0.0   \n",
              "Lisardo      0.666667               0.9               0.2            0.6   \n",
              "Nessa        0.833333               0.9               0.6            0.3   \n",
              "Patrick      0.500000               0.8               1.0            0.5   \n",
              "Simge        1.000000               0.5               0.7            1.0   \n",
              "Sri Saleela  1.000000               0.6               0.0            0.0   \n",
              "Joan         0.000000               0.0               1.0            0.2   \n",
              "\n",
              "              onion (raw)      peas    olives  blue_cheese    whisky     age  \n",
              "student                                                                       \n",
              "Agustín          0.888889  0.666667  1.000000          0.8  0.777778  0.3125  \n",
              "Anna             0.444444  0.555556  0.571429          0.9  0.111111  0.3375  \n",
              "Christopher      0.444444  0.888889  0.714286          0.8  0.888889  0.3625  \n",
              "Fabian           0.222222  0.555556  0.714286          0.3  0.444444  0.4250  \n",
              "Hülya            0.777778  0.555556  1.000000          1.0  0.000000  0.3000  \n",
              "Joldon           0.333333  0.555556  1.000000          0.7  0.888889  0.0000  \n",
              "Karolina         0.666667  0.555556  0.714286          0.8  0.111111  0.3000  \n",
              "Lisardo          0.555556  0.777778  1.000000          0.1  1.000000  0.2125  \n",
              "Nessa            0.000000  0.888889  0.000000          0.5  0.555556  0.3500  \n",
              "Patrick          1.000000  0.555556  1.000000          0.0  0.333333  0.2000  \n",
              "Simge            1.000000  0.888889  1.000000          1.0  0.666667  0.2625  \n",
              "Sri Saleela      0.666667  1.000000  0.714286          0.7  0.000000  0.3250  \n",
              "Joan             0.444444  0.000000  0.714286          0.9  0.888889  1.0000  "
            ]
          },
          "execution_count": 17,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "# What does it mean fit_transform?\n",
        "df_sk_pre = MinMaxScaler().fit_transform(df)\n",
        "pd.DataFrame(df_sk_pre, columns=df.columns, index=df.index)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "nNbfass90FPR",
      "metadata": {
        "id": "nNbfass90FPR"
      },
      "source": [
        "**Your tasks:** \n",
        "\n",
        "- In a new notebook, compute distances between the 10 songs, using the audio features.\n",
        "- Scale the data and observe how the differences change (or not).\n",
        "- Experiment hwo the distances change if you keep/exclude certain audio feautres. Try using very few audio features so you can observe real differences."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "U3_vfc8-0CWy",
      "metadata": {
        "id": "U3_vfc8-0CWy"
      },
      "source": [
        "Learn more about scaling strategies here: https://towardsdatascience.com/scale-standardize-or-normalize-with-scikit-learn-6ccc7d176a02"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "338c0a2e-bb18-45a5-9746-f873574aced9",
        "3557492a-59d1-4d22-b605-a41a1e1985bd"
      ],
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.13"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
